##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Meta regression------------------
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#----------------------
## FAL dataset
#----------------------
# Clear environment
rm(list=ls())
# This script generates the figures related to the meta-regression analysis.
# Load the dataset
data_m <- read.csv("Data/Temporal/FAL_ph.csv")
# Load the meta-regression results for males.
df_m <- read.csv("Results/Temporal/Temporal_FAL_meta-regression.csv")
# Create a sequence of log-transformed forearm lengths for plotting the regression line.
temp <- log10(seq(from = min(data_m$fal), to = max(data_m$fal), length.out = 1000))
# Calculate the size of points based on the inverse of the square root of the sampling variance,
# which adjusts the point size to reflect the precision of each data point.
wi <- 1/sqrt(data_m$vi)
size <- 2 + 20.0 * (wi - min(wi))/(max(wi) - min(wi))
# Set up the range for the x-axis with a small padding.
x_range <- range(log10(data_m$fal))
x_padding <- 0.02
# Generate the plot for males.
M <- ggplot() +
geom_hline(yintercept= 0, size=1.2, linetype="dashed", color="dark gray") +
geom_line(data = df_m, aes(temp, cor), color="grey30", size = .6) +
geom_point(data_m, mapping = aes(x = log10(fal), y = r), fill = "#68B1C9", color='black',
shape=21, size = size * 0.7, alpha = .8) +
scale_size(range=c(2, 10))+
theme_bw(base_size=18) +
geom_ribbon(data = df_m, aes(x = temp, ymin = cor_ci.lb, ymax = cor_ci.ub), fill = "grey20", alpha = .1) +
xlab("log10(forearm length (mm))") +
ylab("Spearman r (FAL-year)") +
ggtitle("FAL") +
theme(legend.position='none',
axis.text = element_text(size = 10),        # Match axis text size
axis.title = element_text(size = 11),       # Match axis label size
plot.title = element_text(size = 13)) +
scale_x_continuous(limits = c(min(x_range) - x_padding, max(x_range) + x_padding)) +
scale_y_continuous(breaks = seq(-1.0,1.0,0.2), limits= c(-1.0,1.0))
# Display the plot for males.
M
#--------------------------
## Pairwise FAL-BM dataset
#--------------------------
# The following sections repeat the same analysis for subsets of the FAL data and for body mass.
# FAL
data_mfa <- read.csv("Data/Temporal/pairwiseFAL_BM_ph.csv")
df_mfa <- read.csv("Results/Temporal/Temporal_pairwiseFAL_BM_meta-regression_FAL.csv")
tempfa <- log10(seq(from = min(data_mfa$fal), to = max(data_mfa$fal), length.out = 1000))
wifa <- 1/sqrt(data_mfa$vi)
sizefa <- 2 + 20.0 * (wifa - min(wifa))/(max(wifa) - min(wifa))
x_range <- range(log10(data_mfa$fal))
x_padding <- 0.02
Mfa <- ggplot() +
geom_hline(yintercept= 0, size=1.2, linetype="dashed", color="dark gray") +
geom_line(data = df_mfa, aes(tempfa, cor), color="grey30", size = .6) +
geom_point(data_mfa, mapping = aes(x = log10(fal), y = r_FAL), fill = "#68B1C9", color='black',
shape=21, size = sizefa * 0.7, alpha = .8) +
scale_size(range=c(2, 10)) +
theme_bw(base_size=18) +
geom_ribbon(data = df_mfa, aes(x = tempfa, ymin = cor_ci.lb, ymax = cor_ci.ub), fill = "grey20", alpha = .1) +
xlab("log10(forearm length (mm))") +
ylab("Spearman r (FAL-year)") +
ggtitle("Subset FAL") +
theme(legend.position='none',
axis.text = element_text(size = 10),        # Match axis text size
axis.title = element_text(size = 11),       # Match axis label size
plot.title = element_text(size = 13)) +
scale_x_continuous(limits = c(min(x_range) - x_padding, max(x_range) + x_padding)) +
scale_y_continuous(breaks = seq(-1.0,1.0,0.2), limits= c(-1.0,1.0))
Mfa
# BM
data_bm <- read.csv("Data/Temporal/pairwiseFAL_BM_ph.csv")
df_bm <- read.csv("Results/Temporal/Temporal_pairwiseFAL_BM_meta-regression_BM.csv")
tempbm <- log10(seq(from = min(data_bm$bm), to = max(data_bm$bm), length.out = 1000))
wibm <- 1/sqrt(data_bm$vi)
sizebm <- 2 + 20.0 * (wibm - min(wibm))/(max(wibm) - min(wibm))
x_range <- range(log10(data_bm$bm))
x_padding <- 0.02
Mbm <- ggplot() +
geom_hline(yintercept= 0, size=1.2, linetype="dashed", color="dark gray") +
geom_line(data = df_bm, aes(tempbm, cor), color="grey30", size = .6) +
geom_point(data_bm, mapping = aes(x = log10(bm), y = r_BM), fill = "#68B1C9", color='black',
shape=21, size = sizebm * 0.7, alpha = .8) +
scale_size(range=c(2, 10)) +
theme_bw(base_size=18) +
geom_ribbon(data = df_bm, aes(x = tempbm, ymin = cor_ci.lb, ymax = cor_ci.ub), fill = "grey20", alpha = .1) +
xlab("log10(body mass (g))") +
ylab("Spearman r (BM-year)") +
ggtitle("Subset BM") +
theme(legend.position='none',
axis.text = element_text(size = 10),        # Match axis text size
axis.title = element_text(size = 11),       # Match axis label size
plot.title = element_text(size = 13)) +
scale_x_continuous(limits = c(min(x_range) - x_padding, max(x_range) + x_padding)) +
scale_y_continuous(breaks = seq(-1.0,1.0,0.2), limits= c(-1.0,1.0))
Mbm
## Final image (Figure 4) ----
final <- ggarrange(M, Mfa, Mbm, ncol = 3, nrow = 1, align = "h", labels = c("a", "b", "c"))
final
# ggsave(filename='Figures/Figure_4.png',
#        width = 430, height = 150, units = 'mm', dpi = 900)
ggsave(filename='Figures/Figure_4.pdf',
width = 300, height = 100, units = 'mm', dpi = 900)
#library
library(sf)
library(ggpubr)
library(sf)
library(here)
library(dplyr)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(magrittr)
library(paletteer)
library(scales)
library(RColorBrewer)
# Clear environment
rm(list=ls())
#----------------------
## Spatial Data
#----------------------
b_S2 <- read.csv("Data/Spatial/FAL_data.csv")
# Calculate "n", the number of cells where each species is present
aa <-  b_S2 %>%
group_by(Bat_species) %>%
dplyr::summarise(n1 = length(unique(cell_id)))
# Join aa with the b_S dataset to include coordinate variables
b_S3 <- left_join(b_S2, aa, by = c("Bat_species"))
b_S3 <-  b_S3 %>%
group_by(Bat_species, n1, Lat_c, Long_c)%>%
dplyr::summarise(n = n())
## Get world polygon for background
world <- ne_countries(scale = "medium", returnclass = "sf")
# Plot the map
map.color_S <- ggplot(data = world) +
theme(plot.margin = unit(c(0.2, 2, 0.2, 0), 'lines'))+
geom_sf(fill = "white") +
coord_sf(xlim = c(-15, 45),
ylim = c(27,65 ),
expand = FALSE) +
geom_point(data = b_S3, aes(x = Long_c, y = Lat_c,
fill = Bat_species),
size = 2.5, shape = 21, color = "gray50",  stroke = 0.3) +
scale_fill_manual(values = alpha(c("#6FB7A7", "#ABD2CB", "#D2E6CD", "#C3E1A8", "#B8D28C",
"#F0F0BF", "#EBD89F", "#EEC9AD", "#E4B888", "#E49A91",
"#EFAFAF", "#D8B2C4", "#BD98BD", "#C6C4D8", "#ADA8D9",
"#A1C3D9", "#B4CDD9", "#B6AFA4", "#D2D2D2"),0.7))+
xlab("") +
ylab("") +
theme_bw()
## Display map
map.color_S <- map.color_S +
theme(legend.position = "none")
map.color_S <-  map.color_S+
theme(legend.text = element_text(size = 8)
)+
guides(color = guide_legend(override.aes = list(size = 1.2), nrow = 3))
map.color_S <-  map.color_S + theme(axis.text.y = element_text(size = 8),
axis.title.y = element_blank()) +
theme(axis.text.x = element_text(size = 8))
# Create the bar plot
bar_plot_S <- ggplot(aa) +
geom_bar(aes(x = n1, y = factor(Bat_species, levels = rev(levels(factor(Bat_species)))),
fill = Bat_species), colour = "black",
stat = "identity", alpha = 0.7, linewidth = 0.35,
position = position_dodge(width = 0.9))+
scale_fill_manual(values = c("#6FB7A7", "#ABD2CB", "#D2E6CD", "#C3E1A8", "#B8D28C",
"#F0F0BF", "#EBD89F", "#EEC9AD", "#E4B888", "#E49A91",
"#EFAFAF", "#D8B2C4", "#BD98BD", "#C6C4D8", "#ADA8D9",
"#A1C3D9", "#B4CDD9", "#B6AFA4", "#D2D2D2"))+
theme_bw() +
scale_x_continuous(breaks = seq(0, 700, by = 50))
bar_plot_S <- bar_plot_S +
guides(fill = "none")
bar_plot_S <-  bar_plot_S + theme(axis.text.y = element_text(size = 12, face = "bold.italic"),
axis.title.y = element_blank()) +
theme(axis.text.x = element_text(size = ))+
theme(plot.margin = unit(c(0.2, 0, 0.2, 2), 'lines'))+
labs(x ="n cells")+
ggtitle("Spatial")+
theme(plot.title = element_text(size = 20, face = "bold"))
#----------------------
## Temporal Data
#----------------------
b_T <- read.csv("Data/Temporal/FAL_data.csv")
# Calculate "n", the number of years where each species is present
aa <-  b_T %>%
group_by(Bat_species) %>%
dplyr::summarise(n1 = length(unique(Year)))
# Join aa with the b_T dataset to include coordinate variables
n2_T <- left_join(b_T, aa, by = c("Bat_species"))
n2_T <-  n2_T %>%
group_by(Bat_species, cell_id, n1, Lat_c, Long_c)%>%
dplyr::summarise(n = n())
## Get world polygon for background
world <- ne_countries(scale = "medium", returnclass = "sf")
nb.cols <- 12
mycolors <- colorRampPalette(brewer.pal(12, "Set3"))(nb.cols)
map.color_T <- ggplot(data = world) +
theme(plot.margin = unit(c(0.2, 4, 0.2, 0), 'lines'))+
geom_sf(fill = "white") +
coord_sf(xlim = c(-15, 45),
ylim = c(27,65 ),
expand = F) +
geom_point(data = n2_T, aes(x = Long_c, y = Lat_c,
fill = Bat_species),
size = 2.5, alpha = 0.7, shape = 21, color = "gray50",  stroke = 0.3) +
scale_fill_manual(values = alpha(c("#6FB7A7", "#ABD2CB", "#B8D28C",
"#EBD89F", "#EEC9AD", "#E4B888", "#E49A91",
"#EFAFAF", "#D8B2C4", "#BD98BD", "#C6C4D8", "#ADA8D9",
"#8DAAEE"),0.7)) +
xlab("") +
ylab("") +
theme_bw()
## Display map
map.color_T <- map.color_T +
theme(legend.position = "none")
map.color_T <-  map.color_T+
theme(legend.text = element_text(size = 8)
)+
guides(color = guide_legend(override.aes = list(size = 1.2), nrow = 3))
map.color_T <-  map.color_T + theme(axis.text.y = element_text(size = 8),
axis.title.y = element_blank()) +
theme(axis.text.x = element_text(size = 8))
# Create the barplot
bar_plot_T <- ggplot(aa) +
geom_bar(aes(x = n1, y = factor(Bat_species, levels = rev(levels(factor(Bat_species)))),
fill = Bat_species), colour = "black",
stat = "identity", alpha = 0.7, linewidth = 0.35,
position = position_dodge(width = 0.9))+
scale_fill_manual(values = c("#6FB7A7", "#ABD2CB", "#B8D28C",
"#EBD89F", "#EEC9AD", "#E4B888", "#E49A91",
"#EFAFAF", "#D8B2C4", "#BD98BD", "#C6C4D8", "#ADA8D9",
"#8DAAEE"))+
theme(text = element_text(family = "Source Code Pro"),
legend.text = element_text(size = 7),
legend.title = element_text(size = 9)) +
scale_x_discrete(labels = label_wrap(2)) + #,guide = guide_axis(n.dodge = 1.5))+
theme_bw() +
scale_x_continuous(breaks = seq(0, 54, by = 10))
bar_plot_T <- bar_plot_T + theme(legend.position = "none")+
guides(fill = "none")
bar_plot_T <-  bar_plot_T + theme(axis.text.y = element_text(size = 12, face = "bold.italic"),
axis.title.y = element_blank()) +
theme(axis.text.x = element_text(size = ))+
theme(plot.margin = unit(c(0.2, 0, 0.2, 2), 'lines'))+
labs(x ="n years")+
ggtitle("Temporal")+
theme(plot.title = element_text(size = 20, face = "bold"))
# Arrange the plots
arrange_ST <- ggarrange(bar_plot_S,   bar_plot_T,map.color_S, map.color_T,
nrow = 2, ncol = 2, labels = c("a", "b", "c", "d"), #common.legend = T, legend = "bottom",
align = "hv", widths = c(0.1,0.1) )+ theme(plot.background = element_rect(color = "black"))
arrange_ST
# ##Save the Figure
# ggsave('Figures/Figure_1.png', arrange_ST,
#        width = 330, height = 230, units = 'mm', dpi = 300, bg="white")
#
# ggsave('Figures/Figure_1.pdf', arrange_ST,
#        width = 330, height = 230, units = 'mm', dpi = 300, bg="white")
# From now on, the analysis is divided based on the dataset used:
# the "FAL dataset" and the "pairwise FAL-BM dataset"
#----------------------
## FAL dataset
#----------------------
## Extract the data from the raster stack at the coord. in the e_mf dataframe
e_mf <- read.csv("Data/Spatial/FAL_data.csv")
# From now on, the analysis is divided based on the dataset used:
# the "FAL dataset" and the "pairwise FAL-BM dataset"
#----------------------
## FAL dataset
#----------------------
## Extract the data from the raster stack at the coord. in the e_mf dataframe
e_mf <- read.csv("Data/Spatial/FAL_data.csv")
View(e_mf)
library(metafor)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(readxl)
library(readr)
library(sf)
library(raster)
# Clear environment
rm(list=ls())
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Meta analysis------------------
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#----------------------
## FAL dataset
#----------------------
## Males
#Loading male model parameter data
m1 <- read.csv("Results/Spatial/Spatial_FAL_meta-analysis_m_Tmax.csv") # Load meta-analysis results for Tmax
m2 <- read.csv("Results/Spatial/Spatial_FAL_meta-analysis_m_Tmin.csv") # Load meta-analysis results for Tmin
m3 <- read.csv("Results/Spatial/Spatial_FAL_meta-analysis_m_SP.csv")   # Load meta-analysis results for Summer precipitation
ESMActi <- rbind(m1,m2,m3)
# Load male data for the different variables
d1 <- read.csv("Results/Spatial/Spatial_FAL_data_m_Tmax.csv")
d2 <- read.csv("Results/Spatial/Spatial_FAL_data_m_Tmin.csv")
d3 <- read.csv("Results/Spatial/Spatial_FAL_data_m_SP.csv")
data <- rbind(d1,d2,d3)
# Calculate the correlation coefficient r from Fisher's Z-transformed correlation (yi)
data$r <- tanh(data$yi)
# Calculate the weights (wi) based on the inverse of the square root of the variance (vi)
# These weights will be used to adjust the size of the points in the plot
wi    <- 1/sqrt(data$vi)
size  <- 2 + 20.0 * (wi - min(wi))/(max(wi) - min(wi))
#Plot
# Create a ggplot to visualize the effect size (Spearman r) for the different environmental variables
sm <- ggplot(data, aes(x = Variable, y = r, fill = Variable, size = size))+
geom_hline(yintercept= 0, size=1, linetype="dashed", col="dark gray")+
geom_jitter(alpha=0.4, width=0.15, height=0, shape=21, col="black")+
scale_fill_manual(values = alpha(c("#20a380","#ff5729","#3186d6")))+
scale_size(range=c(.1, 8))+
geom_pointrange(data = ESMActi, aes(x = Variable, y = ES), ymin=ESMActi$CIL,
ymax=ESMActi$CUL, shape= 21, size=0.7, lwd=0.8,  fill='#CB2A04FF', col="black")+
xlab("")+
ylab("Spearman r (FAL)")+
theme_bw()+
theme(legend.position='none')+
theme(axis.text = element_text(size = 10))+
ggtitle("FAL Males   n=766")
sm
ggplot() +
annotate("polygon", x = c(-Inf, 0, 0), y = c(-Inf, -Inf, 0),
fill = "#98C2EA", alpha = 0.2) +
annotate("polygon", x = c(0, 0, Inf), y = c(0, Inf, Inf), #FFE23D#F8CE8A
fill = "#F8CE8A", alpha = 0.2) +
annotate("polygon", x = c(-Inf, -Inf, 0), y = c(-Inf, 0, 0), #A6DAD8
fill = "#79C8B3", alpha = 0.2) +
annotate("rect", xmin = -Inf, xmax = 0, ymin = Inf, ymax = 0, fill = "#79C8B3", alpha = 0.2)+
geom_hline(yintercept = 0, size = .7, linetype = "dashed", color = "dark gray") +
geom_vline(xintercept = 0, size = .7, linetype = "dashed", color = "dark gray") +
geom_abline(slope = 1, intercept = 0, color = "tomato 4", linetype = "dashed", size = .7) +
# geom_line(data = df_mfa, aes(tempfa, cor), color="grey30", size = .4) +
# geom_ribbon(data = df_mfa, aes(x = tempfa, ymin = cor_ci.lb, ymax = cor_ci.ub), fill = "grey20", alpha = .1) +
geom_point(data_mfa, mapping = aes(x = r_Tmax_BM, y = r_Tmax_FAL),
shape = 21, size = sizefa * 0.5, alpha = 1) +
scale_size(range = c(2, 10)) +
#scale_fill_manual(values = c("Color 1" = "#E67B7B", "Color 2" = "#FFC552", "Color 3" = "#315A83", "Other" = "grey90")) +
theme_bw(base_size = 18) +
xlab("Spearman r (BM-Tmax)") +
ylab("Spearman r (FAL-Tmax)") +
#ggtitle("Males") +
theme(legend.position='none') +
scale_x_continuous(breaks = seq(-0.6,0.6,0.2), limits= c(-0.7,0.7),
labels = scales::label_number(accuracy = 0.1)) +
scale_y_continuous(breaks = seq(-0.6,0.6,0.2), limits= c(-0.7,0.7),
labels = scales::label_number(accuracy = 0.1))+
geom_pointrange(data = a, aes(x = ES, y = ESFAL),
ymin = a$CILFAL, ymax = a$CULFAL,
shape = 21, size = 0.7, lwd = 0.8, fill = '#CB2A04FF', col = "black")+
geom_pointrange(data = a, aes(x = ES, y = ESFAL),
xmin = a$CIL, xmax = a$CUL,
shape = 21, size = 0.7, lwd = 0.8, fill = '#CB2A04FF', col = "black")+
theme(
axis.text = element_text(size = 10),        # Match axis text size
axis.title = element_text(size = 11),       # Match axis label size
plot.title = element_text(size = 13)        # Match title size
) +
ggtitle("Allometry BM-FAL/Tmax Males n=567")+
theme(panel.border = element_rect(colour = "black", size = 0.5))
# Script: Spatial model figures
# Date: 11th November, 2024
##With this script we create the figures 2 and 3
# load libraries
library(metafor)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(readxl)
library(readr)
library(sf)
library(raster)
# Clear environment
rm(list=ls())
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Meta analysis------------------
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#----------------------
## FAL dataset
#----------------------
## Males
#Loading male model parameter data
m1 <- read.csv("Results/Spatial/Spatial_FAL_meta-analysis_m_Tmax.csv") # Load meta-analysis results for Tmax
m2 <- read.csv("Results/Spatial/Spatial_FAL_meta-analysis_m_Tmin.csv") # Load meta-analysis results for Tmin
m3 <- read.csv("Results/Spatial/Spatial_FAL_meta-analysis_m_SP.csv")   # Load meta-analysis results for Summer precipitation
ESMActi <- rbind(m1,m2,m3)
# Load male data for the different variables
d1 <- read.csv("Results/Spatial/Spatial_FAL_data_m_Tmax.csv")
d2 <- read.csv("Results/Spatial/Spatial_FAL_data_m_Tmin.csv")
d3 <- read.csv("Results/Spatial/Spatial_FAL_data_m_SP.csv")
data <- rbind(d1,d2,d3)
# Calculate the correlation coefficient r from Fisher's Z-transformed correlation (yi)
data$r <- tanh(data$yi)
# Calculate the weights (wi) based on the inverse of the square root of the variance (vi)
# These weights will be used to adjust the size of the points in the plot
wi    <- 1/sqrt(data$vi)
size  <- 2 + 20.0 * (wi - min(wi))/(max(wi) - min(wi))
#Plot
# Create a ggplot to visualize the effect size (Spearman r) for the different environmental variables
sm <- ggplot(data, aes(x = Variable, y = r, fill = Variable, size = size))+
geom_hline(yintercept= 0, size=1, linetype="dashed", col="dark gray")+
geom_jitter(alpha=0.4, width=0.15, height=0, shape=21, col="black")+
scale_fill_manual(values = alpha(c("#20a380","#ff5729","#3186d6")))+
scale_size(range=c(.1, 8))+
geom_pointrange(data = ESMActi, aes(x = Variable, y = ES), ymin=ESMActi$CIL,
ymax=ESMActi$CUL, shape= 21, size=0.7, lwd=0.8,  fill='#CB2A04FF', col="black")+
xlab("")+
ylab("Spearman r (FAL)")+
theme_bw()+
theme(legend.position='none')+
theme(axis.text = element_text(size = 10))+
ggtitle("FAL Males   n=766")
## females
#Loading female model parameter data
f1ff <- read.csv("Results/Spatial/Spatial_FAL_meta-analysis_f_Tmax.csv")
f2ff <- read.csv("Results/Spatial/Spatial_FAL_meta-analysis_f_Tmin.csv")
f3ff <- read.csv("Results/Spatial/Spatial_FAL_meta-analysis_f_SP.csv")
ESMActi1ff <- rbind(f1ff,f2ff,f3ff)
# Load female data for the different variables
e1ff <- read.csv("Results/Spatial/Spatial_FAL_data_f_Tmax.csv")
e2ff <- read.csv("Results/Spatial/Spatial_FAL_data_f_Tmin.csv")
e3ff <- read.csv("Results/Spatial/Spatial_FAL_data_f_SP.csv")
data1ff <- rbind(e1ff,e2ff,e3ff)
# Calculate the correlation coefficient r from Fisher's Z-transformed correlation (yi)
data1ff$r <- tanh(data1ff$yi_s)
# Calculate the weights (wi) based on the inverse of the square root of the variance (vi)
# These weights will be used to adjust the size of the points in the plot
wi1ff    <- 1/sqrt(data1ff$vi)
size1ff  <- 2 + 20.0 * (wi1ff - min(wi1ff))/(max(wi1ff) - min(wi1ff))
#Plot
# Create a ggplot to visualize the effect size (Spearman r) for the different environmental variables
sff <- ggplot(data1ff, aes(x = Variable, y = r, fill = Variable, size = size1ff))+
geom_hline(yintercept= 0, size=1, linetype="dashed", col="dark gray")+
geom_jitter(alpha=0.4, width=0.15, height=0, shape=21, col="black")+
scale_fill_manual(values = alpha(c("#20a380","#ff5729","#3186d6")))+
scale_size(range=c(.1, 8))+
geom_pointrange(data = ESMActi1ff, aes(x = Variable, y = ES), ymin=ESMActi1ff$CIL,
ymax=ESMActi1ff$CUL, shape= 21, size=0.7, lwd=0.8, fill='#CB2A04FF', col="black")+
xlab("")+
ylab("Spearman r (FAL)")+
theme_bw()+
theme(legend.position='none')+
theme(axis.text = element_text(size = 10))+
ggtitle("FAL Females   n=740")
#--------------------------------------
## Pairwise FAL-BM dataset (Allometry)
#--------------------------------------
## Tmax
# Males
data_mfa <- subset(read.csv("Data/Spatial/pairwiseFAL_BM_ph.csv"), Sex == "male")
tempfa <- seq(from = min(data_mfa$yi_Tmax_BM), to = max(data_mfa$yi_Tmax_BM), length.out = 1000)
wifa <- 1/sqrt(data_mfa$vi)
sizefa <- 2 + 20.0 * (wifa - min(wifa))/(max(wifa) - min(wifa))
x_range <- range(data_mfa$yi_Tmax_BM)
x_padding <- 0.02
m7 <- read.csv("Results/Spatial/Spatial_pairwiseFAL_BM_meta-analysis_m_Tmax_FAL.csv")
m9 <- read.csv("Results/Spatial/Spatial_pairwiseFAL_BM_meta-analysis_m_Tmax_BM.csv")
m7 <- m7 %>%
dplyr::rename(CILFAL = CIL,
CULFAL = CUL,
ESFAL = ES,
VariableFAL = Variable)
a <- cbind(m7,m9)
data_mfa$color_group <- with(data_mfa,
ifelse(r_Tmax_BM == r_Tmax_FAL, "Red Border",
ifelse(r_Tmax_BM < 0 & r_Tmax_FAL < r_Tmax_BM, "Color 1",
ifelse(r_Tmax_BM < 0 & r_Tmax_FAL > r_Tmax_BM, "Color 2",
ifelse(r_Tmax_BM > 0 & r_Tmax_FAL > r_Tmax_BM, "Color 3", "Other")))))
ggplot() +
annotate("polygon", x = c(-Inf, 0, 0), y = c(-Inf, -Inf, 0),
fill = "#98C2EA", alpha = 0.2) +
annotate("polygon", x = c(0, 0, Inf), y = c(0, Inf, Inf), #FFE23D#F8CE8A
fill = "#F8CE8A", alpha = 0.2) +
annotate("polygon", x = c(-Inf, -Inf, 0), y = c(-Inf, 0, 0), #A6DAD8
fill = "#79C8B3", alpha = 0.2) +
annotate("rect", xmin = -Inf, xmax = 0, ymin = Inf, ymax = 0, fill = "#79C8B3", alpha = 0.2)+
geom_hline(yintercept = 0, size = .7, linetype = "dashed", color = "dark gray") +
geom_vline(xintercept = 0, size = .7, linetype = "dashed", color = "dark gray") +
geom_abline(slope = 1, intercept = 0, color = "tomato 4", linetype = "dashed", size = .7) +
# geom_line(data = df_mfa, aes(tempfa, cor), color="grey30", size = .4) +
# geom_ribbon(data = df_mfa, aes(x = tempfa, ymin = cor_ci.lb, ymax = cor_ci.ub), fill = "grey20", alpha = .1) +
geom_point(data_mfa, mapping = aes(x = r_Tmax_BM, y = r_Tmax_FAL),
shape = 21, size = sizefa * 0.5, alpha = 1) +
scale_size(range = c(2, 10)) +
#scale_fill_manual(values = c("Color 1" = "#E67B7B", "Color 2" = "#FFC552", "Color 3" = "#315A83", "Other" = "grey90")) +
theme_bw(base_size = 18) +
xlab("Spearman r (BM-Tmax)") +
ylab("Spearman r (FAL-Tmax)") +
#ggtitle("Males") +
theme(legend.position='none') +
scale_x_continuous(breaks = seq(-0.6,0.6,0.2), limits= c(-0.7,0.7),
labels = scales::label_number(accuracy = 0.1)) +
scale_y_continuous(breaks = seq(-0.6,0.6,0.2), limits= c(-0.7,0.7),
labels = scales::label_number(accuracy = 0.1))+
geom_pointrange(data = a, aes(x = ES, y = ESFAL),
ymin = a$CILFAL, ymax = a$CULFAL,
shape = 21, size = 0.7, lwd = 0.8, fill = '#CB2A04FF', col = "black")+
geom_pointrange(data = a, aes(x = ES, y = ESFAL),
xmin = a$CIL, xmax = a$CUL,
shape = 21, size = 0.7, lwd = 0.8, fill = '#CB2A04FF', col = "black")+
theme(
axis.text = element_text(size = 10),        # Match axis text size
axis.title = element_text(size = 11),       # Match axis label size
plot.title = element_text(size = 13)        # Match title size
) +
ggtitle("Allometry BM-FAL/Tmax Males n=567")+
theme(panel.border = element_rect(colour = "black", size = 0.5))
